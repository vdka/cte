
#library "libc" libc
#import "math/constants.cte" .
#import "math/circle.cte" .

#foreign libc {
    printf :: fn (fmt: string, args: ..f64) -> i32
}


min :: fn ($T: type, a: T, b: T) -> T {
  if a < b return a
  else return b
}

add : fn (i64) -> i64 : fn (foo: i64) -> i64 {
    return foo + 1
}

sub :: fn (foo: i64) -> i64 {
    return foo - 1
}

a : f64 = 5.0
b : i64 = 3
c := min(f64, a, 4)
d := min(i64, b, 4)
e := min(i64, b, d)

f := f64(b)

g : fn(i64) -> i64 = add

h := g(8)

g = sub

h = g(8)

i := circumference(tau)

p := printf("val: %f", 5.0)

addrA := &a
valA := <addrA

