
extension Entity {
{% for type in types.all where type.name == "BuiltinType" %}
{% for var in type.staticVariables %}
    static let {{ var.name }} = BuiltinType.{{ var.name }}.entity
{% endfor %}
{% endfor %}
}

extension Type {
{% for type in types.all where type.name == "BuiltinType" %}
{% for var in type.staticVariables %}
    static let {{ var.name }} = BuiltinType.{{ var.name }}.type
{% endfor %}
{% endfor %}
}

let builtinTypes = [
{% for type in types.all where type.name == "BuiltinType" %}
{% for var in type.staticVariables %}
    BuiltinType.{{ var.name }},
{% endfor %}
{% endfor %}
]

let builtinEntities = [
{% for type in types.all where type.name == "BuiltinEntity" %}
{% for var in type.staticVariables %}
    BuiltinEntity.{{ var.name }},
{% endfor %}
{% endfor %}
]

let builtinFunctions = [
{% for type in types.all where type.name == "BuiltinFunction" %}
{% for var in type.staticVariables %}
    BuiltinFunction.{{ var.name }},
{% endfor %}
{% endfor %}
]

let builtins = [
{% for type in types.all where type.name == "BuiltinEntity" %}
{% for var in type.staticVariables %}
    BuiltinEntity.{{ var.name }}.entity,
{% endfor %}
{% endfor %}
{% for type in types.all where type.name == "BuiltinFunction" %}
{% for var in type.staticVariables %}
    BuiltinFunction.{{ var.name }}.entity,
{% endfor %}
{% endfor %}
{% for type in types.all where type.name == "BuiltinType" %}
{% for var in type.staticVariables %}
    BuiltinType.{{ var.name }}.entity,
{% endfor %}
{% endfor %}
]

