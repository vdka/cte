
extension AstNode {
{% for type in types.implementing.AstValue|!protocol %}

    var as{% if type.parentName|contains:"Checker" %}Checked{% endif %}{{ type.localName }}: {{ type.name }} {
        assert(kind == {{ type.name }}.astKind)
        return value as! {{ type.name }}
    }
{% endfor %}
}

extension Type {
{% for type in types.implementing.TypeValue %}

    var as{{ type.localName }}: Type.{{ type.localName }} {
        return value as! {{ type.name }}
    }
{% endfor %}
}
